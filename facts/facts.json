{
  "facts": [
    {
      "content": "If the server takes too long to judge a tourist solution, the server receives a TLE verdict.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist can speak in C++.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Once, tourist sent all his solutions at once and took the first place immediately. 30 seconds later, his solutions were judged.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist solved a NP-Complete problem once. In constant time.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "For tourist, dark mode or light mode doesn't matter, as he usually codes with his eyes closed.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist once solved an n \u2264 10^5 problem using only boolean data types.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist receives \"Accepted\" verdicts in heuristic competitions.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "When tourist hosts a contest, there aren't any queue delays, because he judges all submissions himself by looking at the source code.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist once enumerated all prime numbers. Backwards.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist's randomized solutions don't have a probability of fail.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "When tourist creates an interactive problem, he doesn't write a interactor program. He interacts with the contestants code himself.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist runs C++ code on interactive shells.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "There aren't prime numbers. Just numbers that tourist hasn't bothered to factor yet.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "When tourist hashes strings, there isn't a risk of collision.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "When tourist wants to make juice, he takes the fruits of segment trees.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "\"Segment trees\" were actually called \"Whole trees\" before tourist smashed them.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "The baby and the giant on the baby-step giant-step algorithm are actually running from tourist.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist can overflow bigint data types.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist solved a problem using brainfuck once \u2014 In a Kotlin Heroes contest.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist doesn't use sort. He just shakes the array with his own hands until all elements get in the right place.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist always climb up positions in the scoreboard, even if he is already the first \u2014 and the scoreboard is frozen.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "When tourist codes a persistant data structure, it LITERALLY can go back on time.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Boolean data types can take more than 2 different values if tourist wants them to.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "All algorithms can be done in at most O(N). If they aren't yet, it's just because tourist didn't bother to optimize them.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist choose his nick because he used to travel to a LOT of cities. And he was always able to choose the optimal path between them.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist doesn't think that naming variables are hard.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist compile code by shrinking it with his bare hands.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist doesn't use doubles. He uses triples, a float-type with no loss of precision.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist can make floats sink by looking at them.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "When born, instead of crying, tourist spelled source code in Delphi. The doctor's response was \"Accepted\"",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist can count to 2^64. On his fingers.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist has binary trees, fenwick trees and link cut trees growing on his garden.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist doesn't need a stop condition on his recursive algorithms. They stop when he wants them to.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist's phone number, when converted to binary, is actually a compiled C++ code of an FFT implementation.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist can do both range queries and range updates in O(1)",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist can code a segment tree in HTML.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist eat meals in hash tables.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist knows the Lowest Common Ancestor of any pair of people.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist doesn't know the \"Heavy-Light Decomposition\". He calls it \"Light-Lighter Decomposition\".",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist knows the Nim value of any chess position.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist can hear programming languages. From computers. Turned off.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Bugs are afraid of tourist.",
      "author": "diksown",
      "timestamp": "2021-10-28T00:04:41.143174"
    },
    {
      "content": "Tourist can sort an array in constant time",
      "author": "Divyanshu-1",
      "timestamp": "2021-10-28T02:59:19.414384"
    },
    {
      "content": "Tourist can solve N<=1e5 problems in O(N^2)",
      "author": "Malhe1ros",
      "timestamp": "2021-10-28T03:07:22.307789"
    },
    {
      "content": "Tourist doesn't read the statements, he looks at the sample test cases and instantly knows what to do",
      "author": "Malhe1ros",
      "timestamp": "2021-10-28T03:07:22.307789"
    },
    {
      "content": "Tourist can use MO for online queries",
      "author": "Malhe1ros",
      "timestamp": "2021-10-28T03:07:22.307789"
    },
    {
      "content": "Tourist coded the program for evolution once, and the rest is history.",
      "author": "Mastan1301",
      "timestamp": "2021-10-28T03:10:02.976218"
    },
    {
      "content": "Tourist can solve two pointers problems with only one pointer",
      "author": "Malhe1ros",
      "timestamp": "2021-10-28T03:18:46.141537"
    },
    {
      "content": "Tourist's Fourier Transform isn't fast, it's immediate",
      "author": "Malhe1ros",
      "timestamp": "2021-10-28T03:19:43.194058"
    },
    {
      "content": "Tourist doesn't need to divide to conquer",
      "author": "Malhe1ros",
      "timestamp": "2021-10-28T03:26:56.870932"
    },
    {
      "content": "When tourist takes educational rounds, the problemsetters learn from him.",
      "author": "bucketpotato01",
      "timestamp": "2021-10-28T11:25:26.991376"
    },
    {
      "content": "Tourist doesn't need to binary search to find the optimal answer. He already knows where it is.",
      "author": "Dragonado",
      "timestamp": "2021-10-28T11:28:17.483095"
    },
    {
      "content": "Tourist can do binary lifting in cyclic graphs.",
      "author": "Dragonado",
      "timestamp": "2021-10-28T11:28:17.483095"
    }
  ]
}